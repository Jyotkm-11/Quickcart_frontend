
{/* <h1 className='text-center text-sky-800 bg-gray-100  mb-0 ' style={{fontSize:"3rem"}}>Shipping Form</h1>
  <div className="  min-h-screen bg-gray-100 flex items-center justify-center p-8 ">
 
    <div className="bg-white gap-4 rounded-xl shadow-md grid grid-cols-1 md:grid-cols-2 w-full max-w-5xl overflow-hidden">
      {/* Left Section - Shipping Address */}
      // <form className="p-8" onSubmit={handleSubmit}>
     
      //   <h2 className="text-2xl font-semibold mb-6">Add Shipping Address</h2>

      //   <div className="space-y-4">
      //     <input className="w-full border rounded-md p-2" 
      //     placeholder="Full Name" 
      //     value={fullName}
      //     onChange={(e) => setFullName(e.target.value)}
      //     required
      //     />

      //     <div className="grid grid-cols-2 gap-4">
      //       <input className="w-full border rounded-md p-2"
      //        placeholder="Country"
      //        value={country}
      //        onChange={(e) => setCountry(e.target.value)}
      //          required
      //        />
      //       <input className="w-full border rounded-md p-2" placeholder="Pincode"
      //       value={pincode}
      //       onChange={(e) => setPincode(e.target.value)}
      //       required
      //       />
      //     </div>

      //     <div className="space-y-4">
      //       <input className="w-full border rounded-md p-2" placeholder="Phone Number"
      //       value={phoneNumber}
      //       onChange={(e) => setPhoneNumber(e.target.value)}
      //       required
      //       />
      //       {/* <input className="w-full border rounded-md p-2" placeholder="Powai" /> */}
      //     </div>

      //     <input className="w-full border rounded-md p-2" placeholder="Address (Area and Street)"
      //     value={address}
      //     onChange={(e) => setAddress(e.target.value)}
      //     required
      //     />

      //     <div className="grid grid-cols-2 gap-4">
      //       <input className="w-full border rounded-md p-2" placeholder="City/District/Town"
      //        value={city}
      //        onChange={(e) => setCity(e.target.value)}
      //        required
      //       />
      //       <input className="w-full border rounded-md p-2" placeholder="State"
      //       value={state}
      //       onChange={(e) => setState(e.target.value)}
      //       required
      //       />
      //     </div>

          {/* <div className="flex items-center space-x-2">
            <input
              type="checkbox"
              checked={sameAsBilling}
              onChange={() => setSameAsBilling(!sameAsBilling)}
            /> */}
            {/* <label className="text-sm">Same as Billing Address</label>
            <button className="text-blue-600 text-sm hover:underline">Add Billing Address</button>
          </div> */}

          <button 
          
          className="bg-green-600 hover:bg-green-400 text-white w-full py-2 rounded-md">
            Save and Deliver here
          </button>
          
          {/* old address start */}
          <button 
type="button"
onClick={() => setShowOldAddress(true)}
className="bg-sky-600 hover:bg-sky-400 text-white w-full py-2 rounded-md"
>
Use Old Address
</button>

          {/* old address end */}
           
        </div>
        </form>


  
       

        {/* Right Section - Order Summary */}
        <div className="bg-gray-50 p-8 border-l border-gray-200">
          <div className="text-sm text-gray-500 mb-2">Cart &nbsp; -------- &nbsp; <span className="text-green-600 font-semibold">Delivery</span> &nbsp; -------- &nbsp; Payment</div>

          <h3 className="text-xl font-semibold mb-4">Order Summary</h3>
          <div className="flex justify-between mb-2">
            <span>Order Total</span>
            <span>Rs {price} </span>
          </div>
          <div className="flex justify-between mb-4">
            <span>Delivery Charges</span>
            <span>Rs. 150</span>
          </div>

          <h3 className="text-xl font-semibold mb-4">Delivery Summary</h3>
          <div className="flex justify-between items-center mb-4">
            <div>
              <div>Standard Delivery</div>
              <div className="text-sm text-gray-500"> Expected date : 1 May , 2025 </div>
            </div>
            <div className="text-right">
              <div className="font-semibold">Rs 150</div>
              {/* <button className="text-blue-600 text-sm hover:underline">Change</button> */}
            </div>
          </div>

          <div className="flex justify-between text-lg font-semibold mt-6">
            <span>Total Payable</span>
            <span>Rs {price+150} </span>
          </div>

          <button className="bg-red-500 hover:bg-red-600 text-white w-full py-2 mt-6 rounded-md">
            Place Order
          </button>
        </div>
      </div>
    </div> 
    
    <!-- shipping form code -->
     <!-- 
    
     <h1 className='text-center text-sky-800 bg-gray-100 mb-0' style={{ fontSize: "3rem" }}>Shipping Form</h1>

      <div className="min-h-screen bg-gray-100 flex items-center justify-center p-8">
        <div className="bg-white gap-4 rounded-xl shadow-md grid grid-cols-1 md:grid-cols-2 w-full max-w-5xl overflow-hidden">

          {/* Left Section */}
          {showOldAddress && userAddress ? (
            <div className="p-8 space-y-4">
              <h2 className="text-2xl font-semibold mb-6">Saved Address</h2>
              <div className="bg-gray-100 p-4 rounded-md space-y-2">
                <p><strong>Full Name:</strong> {userAddress.fullName}</p>
                <p><strong>Phone Number:</strong> {userAddress.phoneNumber}</p>
                <p><strong>Address:</strong> {userAddress.address}, {userAddress.city}, {userAddress.state}, {userAddress.pincode}, {userAddress.country}</p>
              </div>
              <button
                onClick={() => setShowOldAddress(false)}
                className="bg-gray-400 hover:bg-gray-300 text-white w-full py-2 rounded-md"
              >
                Back to New Address Form
              </button>
            </div>
          ) : (
            <form className="p-8" onSubmit={handleSubmit}>
              <h2 className="text-2xl font-semibold mb-6">Add Shipping Address</h2>

              <div className="space-y-4">
                <input className="w-full border rounded-md p-2" placeholder="Full Name" value={fullName} onChange={(e) => setFullName(e.target.value)} required />
                <div className="grid grid-cols-2 gap-4">
                  <input className="w-full border rounded-md p-2" placeholder="Country" value={country} onChange={(e) => setCountry(e.target.value)} required />
                  <input className="w-full border rounded-md p-2" placeholder="Pincode" value={pincode} onChange={(e) => setPincode(e.target.value)} required />
                </div>
                <input className="w-full border rounded-md p-2" placeholder="Phone Number" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} required />
                <input className="w-full border rounded-md p-2" placeholder="Address (Area and Street)" value={address} onChange={(e) => setAddress(e.target.value)} required />
                <div className="grid grid-cols-2 gap-4">
                  <input className="w-full border rounded-md p-2" placeholder="City/District/Town" value={city} onChange={(e) => setCity(e.target.value)} required />
                  <input className="w-full border rounded-md p-2" placeholder="State" value={state} onChange={(e) => setState(e.target.value)} required />
                </div>
                <button className="bg-green-600 hover:bg-green-400 text-white w-full py-2 rounded-md">Save and Deliver here</button>
                <button type="button" onClick={() => setShowOldAddress(true)} className="bg-sky-600 hover:bg-sky-400 text-white w-full py-2 rounded-md">Use Old Address</button>
              </div>
            </form>
          )}

          {/* Right Section - Order Summary */}
          <div className="bg-gray-50 p-8 border-l border-gray-200">
            <div className="text-sm text-gray-500 mb-2">Cart &nbsp; -------- &nbsp;
              <span className="text-green-600 font-semibold">Delivery</span> &nbsp; -------- &nbsp; Payment</div>
            <h3 className="text-xl font-semibold mb-4">Order Summary</h3>
            <div className="flex justify-between mb-2">
              <span>Order Total</span>
              <span>Rs {price}</span>
            </div>
            <div className="flex justify-between mb-4">
              <span>Delivery Charges</span>
              <span>Rs. 150</span>
            </div>
            <h3 className="text-xl font-semibold mb-4">Delivery Summary</h3>
            <div className="flex justify-between items-center mb-4">
              <div>
                <div>Standard Delivery</div>
                <div className="text-sm text-gray-500">Expected date: 1 May, 2025</div>
              </div>
              <div className="text-right font-semibold">Rs 150</div>
            </div>
            <div className="flex justify-between text-lg font-semibold mt-6">
              <span>Total Payable</span>
              <span>Rs {price + 150}</span>
            </div>
            <button onClick={handlePayment} className="bg-red-500 hover:bg-red-600 text-white w-full py-2 mt-6 rounded-md">
              Place Order
            </button>
          </div>
        </div>
      </div>
     -->



     ////////
     <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 max-w-6xl mx-auto px-4 mt-10">
      {features.map((feature, index) => (
        <div key={index} className="bg-white rounded-xl shadow-md p-6 hover:shadow-lg transition-all duration-300 border">
          <div className="flex flex-col items-center justify-center space-y-4">
            {/* {feature.icon} */}
            {typeof feature.icon === 'string' ? (
  <img src={feature.icon} alt="icon" className="w-10 h-10 object-contain" />
) : (
  feature.icon
)}
            <h3 className="text-xl font-semibold text-gray-800">{feature.title}</h3>
            <p className="text-gray-500 text-sm">{feature.description}</p>
            <a href="#" className="text-green-500 font-medium mt-2 text-decoration-none">Read More</a>
          </div>
        </div>
      ))}
    </div> 

    ////

    <div className="w-full min-h-screen flex items-center justify-center " style={{backgroundColor:"#4E657A" , border:" 50px solid #435C70"}}>
    <div className=" p-4 rounded-md w-full max-w-xl mx-auto overflow-x-auto">
  <table className="w-full text-white text-left border-collapse">
    <thead>
      <tr className="text-white" style={{backgroundColor:"#486177" , border:" 5px solid #435C70"}}>
        <th className="p-3">USER NAME</th>
        <th className="p-3">USER EMAIL</th>
        <th className="p-3">USER EMAIL</th>
        
      </tr>
    </thead>
    <tbody>
      {orderData?.map((i) => (
        <tr key={i._id} className=" text-white" style={{backgroundColor:"#4E657A" , border:"5px solid #435C70"}}>
          <td className="p-3 flex items-center space-x-2">
            {/* <span className="w-4 h-4 bg-gray-500 rounded-full inline-block"></span> */}
            <span className="font-bold">{i.payStatus}</span>
          </td>
          <td className="p-3">{i.orderDate}</td>
          <td className="p-3">{i.cartItems}</td>
          
        </tr>
      ))}
    </tbody>
  </table>
  
</div>
</div>



// nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
import React, { useContext} from "react";
import AppContext from "../Context/AppContext";
import { Link } from "react-router-dom";



const Showproduct = () => {
    const {products, addToCart ,  wishlist, addToWishlist} = useContext(AppContext);
    const isInWishlist = wishlist.some(item => item.productId === product._id);

  const handleClick = () => {
    if (isInWishlist) {
      removeFromWishlist(product._id);
    } else {
      addToWishlist(product._id, product.title, product.price, product.imgsrc);
    }
  };
 return(
  <>
  {/* <h1 className="fs-2 ms-2 mt-5" >Popular Products</h1> */}
  <div className="d-flex justify-content-between align-items-center mb-3 ms-0 mt-5 me-5">
    <h3 className=" fs-2 ms-3">Popular Products</h3>
    <div className="d-flex gap-4 fs-5" >
      <a style={{textDecoration:"none" }} className='text-dark' href="#">All</a>
      <a style={{textDecoration:"none" }} className='text-dark' href="#">Baking Materials</a>
      <a style={{textDecoration:"none" }} className='text-dark' href="#">Fresh Fruits</a>
      <a style={{textDecoration:"none" }} className='text-dark' href="#">Milk & Dairies</a>
      <a style={{textDecoration:"none" }} className='text-dark' href="#">Meats</a>
      <a style={{textDecoration:"none" }} className='text-dark' href="#">Vegetables</a>
    </div>
  </div>

  <div className="grid grid-cols-5 gap-4 p-4">

  {products?.slice(0, 15).map((i) => (
    <div key={i._id} className="card bg-base-100 shadow-sm">
         <Link to={`/product/${i._id}`}> 
      <figure className="w-full h-40 flex items-center justify-center overflow-hidden">
        <img
          src= {i.imgsrc}
          className=" object-cover"
          style={{height:"140px" , width:"55%"}}
        />
      </figure>
      </Link>
      <div className="card-body">
        <h5 className="text-gray-600 text-xs"> {i.category} </h5>
        <h2 className="card-title text-xl">{i.title}</h2>
        <p> {i.description} </p>

        {/* <div className="flex justify-between p-4 bg-gray-100">
          <div> {i.price}</div>
          <div className="card-actions justify-end">
            <button className="btn btn-primary">Add to cart</button>
          </div>
        </div> */}

        {/*  */}
        <div className="d-flex justify-content-between align-items-center" style={{ width: '250px' }}>
  {/* Price */}
  <span className="fw-bold text-success" style={{ textDecoration: 'none', fontSize: '1.1rem' }}>
  ₹{i.price}
  </span>

  {/* Add to Cart Button */}
  <button onClick={()=> addToCart(i._id , i.title , i.price , 1 , i.imgsrc) }
  className="btn fw-semibold d-flex align-items-center gap-2 px-3 py-1 rounded"
   style={{ backgroundColor: 'rgba(25, 135, 84, 0.1)', color: '#198754' }} >
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
  <path strokeLinecap="round" strokeLinejoin="round" d="M15.75 10.5V6a3.75 3.75 0 1 0-7.5 0v4.5m11.356-1.993 1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 0 1-1.12-1.243l1.264-12A1.125 1.125 0 0 1 5.513 7.5h12.974c.576 0 1.059.435 1.119 1.007ZM8.625 10.5a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm7.5 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
</svg>
 Add
  </button>

  {/* Wishlist Button */}
  <button
                    onClick={() =>
                      isInWishlist
                        ? removeFromWishlist(i._id)
                        : addToWishlist(i._id, i.title, i.price, i.imgsrc)
                    }
                    style={{
                      backgroundColor: isInWishlist ? 'green' : 'gray',
                      color: 'white',
                      border: 'none',
                      padding: '8px 12px',
                      cursor: 'pointer',
                      borderRadius: '4px',
                    }}
                  >
                    {isInWishlist ? 'Remove Wishlist' : 'Add Wishlist'}
                  </button>

</div>

        {/*  */}

      </div>
    </div>
  ))}
</div>

  </>

  )  
}

export default Showproduct

// blog
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const BlogPage = () => {
  const [blogs, setBlogs] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios.get('http://localhost:3000/api/blogs/all')
      .then((response) => {
        setBlogs(response.data);
        setLoading(false);
      })
      .catch((error) => {
        console.error('Error fetching blogs:', error);
        setLoading(false);
      });
  }, []);

  if (loading) return <div className="text-center mt-10">Loading blogs...</div>;

  return (
    <div className="container mt-5">
      <h2 className="text-center mb-4">Latest Blogs</h2>
      <div className="row">
        {blogs.map(blog => (
          <div className="col-md-4 mb-4" key={blog._id}>
            <div className="card h-100 shadow-sm">
              {blog.imgsrc && (
                <img
                  src={blog.imgsrc}
                  alt={blog.title}
                  className="card-img-top"
                  style={{ height: '180px', objectFit: 'cover' }}
                />
              )}
              <div className="card-body d-flex flex-column">
                <h5 className="card-title">{blog.title}</h5>
                <p className="card-text text-truncate">{blog.description}</p>
                <div className="mt-auto">
                  <small className="text-muted">
                    {new Date(blog.date).toLocaleDateString()} by {blog.author}
                  </small>
                </div>
              </div>
            </div>
          </div>
        ))}
        {blogs.length === 0 && (
          <div className="col-12 text-center text-muted">No blogs found.</div>
        )}
      </div>
    </div>
  );
};

export default BlogPage;

// new
import React, { useEffect, useState,useContext } from 'react';
import axios from 'axios';
import { useParams } from 'react-router-dom';
import Head from './Head';
import AppContext from "../Context/AppContext";
import Relatedproduct from './Relatedproduct';

const ProductDetail = () => {
    const [product, setProduct] = useState(null);
    const { id } = useParams();
    const url = "http://localhost:3000/api";

    useEffect(() => {
        const fetchProduct = async () => {
            try {
                const response = await axios.get(`${url}/product/${id}`, {
                    headers: { "Content-Type": "application/json" },
                    withCredentials: true,
                });
                setProduct(response.data.product);
            } catch (error) {
                console.error("Error fetching product:", error);
            }
        };
        fetchProduct();
    }, [id, url]); // Ensure dependencies are properly listed

    // const {products,} = useContext(AppContext)

    const categories = [
        { name: "Baking Material", count: 7, icon: "🧁" },
        { name: "Bread and Juice", count: 5, icon: "🥖" },
        { name: "Clothing & Beauty", count: 2, icon: "👗" },
        { name: "Deals Of The Day", count: 4, icon: "🔥" },
        { name: "Fresh Fruit", count: 8, icon: "🍌" },
        { name: "Fresh Seafood", count: 5, icon: "🐟" },
        { name: "Milks and Dairies", count: 3, icon: "🥛" },
        { name: "Vegetables", count: 3, icon: "🥕" },
      ];

      const [rating, setRating] = useState(0);
      const [hover, setHover] = useState(0);
    return (
        <>
           <Head/>
           <hr />
           <div className='row'> </div>
            <div className='row  mt-5'>
                <div className='col-1'></div>
               
                <div className="col-3 image-container ">
  <img className=" custom-img " src={product?.imgsrc || "placeholder.jpg"} alt={product?.title || "Loading..."} />
</div>
             <div className='col-1'></div>
                <div className='col-4 mt-4'>
                <h1 className="fs-1 text-green-900 fw-bold">{product?.title || "Loading..."}</h1>
                <h2 className='text-stone-500'> {product?.price || "Loading..."} </h2>
                <h4 className='text-stone-500'> {product?.description || "Loading..."} </h4>
                <div className='row mt-4'>
                    <div className='col-2'>
                        <button className='btn btn-outline-success'> {product?.qty || "Loading..."} </button>
                    </div>
                    <div className='col-4'> 
                    <button className='btn btn-success'> Add to cart </button> </div>
                </div>

               
                </div>
                <div className='col-3'>
                    {/* {products?.map( (i)=>(
                         <div key={i._id} >
                             <h1> {i?.category || "Loading..."} </h1>
                             </div>
                    ))} */}


{/* <div className="bg-white w-72 p-4 rounded-xl shadow-lg">
      <h2 className="text-xl font-bold mb-3 text-center">Category</h2>
      <ul className="space-y-2">
        {products?.map((i) => (
          <li
            key={i._id}
            className="flex items-center bg-gray-100 p-3 rounded-lg hover:bg-blue-100 transition"
          >
            <span className="text-xl mr-3"> icon </span>
            <span className="flex-grow text-gray-700 font-medium">
             {i?.category ||"Loading..."}
            </span>
            
          </li>
        ))}
      </ul>
    </div> */}

{/* //Category static */}

<div className="bg-white w-72 p-4 rounded-xl " >
      <h2 className="text-xl font-bold mb-3 text-center">Category</h2>
      <ul className="space-y-2">
        {categories.map((category, index) => (
          <li
            key={index}
            className="flex items-center bg-gray-100 p-3 rounded-lg hover:bg-blue-100 transition"
          >
            <span className="text-xl mr-3">{category.icon}</span>
            <span className="flex-grow text-gray-700 font-medium">
              {category.name}
            </span>
            <span className="bg-green-200 px-3 py-1 rounded-full text-sm font-bold">
              {category.count}
            </span>
          </li>
        ))}
      </ul>
    </div>



{/* category end */}


                </div>
            </div>
{/* review page start */}

<div className=" p-4 border rounded-lg " style={{width:"1050px" , marginLeft:"6rem" , marginTop:"-24rem"}}>
      <div className="mb-4">
        <span className="bg-green-100 text-green-600 px-3 py-1 rounded-full text-sm">Reviews (0)</span>
      </div>
      <h2 className="text-xl font-semibold mb-2">Reviews</h2>
      <p className="text-gray-600 mb-2">There are no reviews yet.</p>
      <p className="mb-4 font-medium">Be the first to review <span className="text-green-700"> {product?.title || "Loading.."} </span></p>
      <p className="text-sm text-gray-500 mb-2">Your email address will not be published. Required fields are marked *</p>
      
      {/* Rating */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Your rating *</label>
        <div className="flex space-x-1">
          {[...Array(5)].map((_, index) => {
            const ratingValue = index + 1;
            return (
              <span
                key={index}
                className={`cursor-pointer text-2xl ${
                  ratingValue <= (hover || rating) ? 'text-yellow-500' : 'text-gray-300'
                }`}
                onClick={() => setRating(ratingValue)}
                onMouseEnter={() => setHover(ratingValue)}
                onMouseLeave={() => setHover(0)}
              >
                ★
              </span>
            );
          })}
        </div>
      </div>

      {/* Review textarea */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Your review *</label>
        <textarea
          rows="5"
          className="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring focus:ring-green-300"
          placeholder="Write your review here..."
        ></textarea>
      </div>

      {/* Name input */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Name *</label>
        <input
          type="text"
          className="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring focus:ring-green-300"
        />
      </div>

      {/* Email input */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Email *</label>
        <input
          type="email"
          className="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring focus:ring-green-300"
        />
      </div>

      {/* Checkbox */}
      <div className="mb-4 flex items-center">
        <input type="checkbox" id="save-info" className="mr-2" />
        <label htmlFor="save-info" className="text-sm text-gray-600">
          Save my name, email, and website in this browser for the next time I comment.
        </label>
      </div>

      {/* Submit button */}
      <button className="w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded">
        Submit
      </button>
    </div>
{/* review page end */}


            {/* related product start */}

<Relatedproduct category={product?.category} />
{/* related product end */}
        </>
    );
};

export default ProductDetail;


// product detail code
import React, { useEffect, useState,useContext } from 'react';
import axios from 'axios';
import { useParams } from 'react-router-dom';
import Head from './Head';
import AppContext from "../Context/AppContext";
import Relatedproduct from './Relatedproduct';

const ProductDetail = () => {
  const {products} = useContext(AppContext);
    const [product, setProduct] = useState(null);
    const { id } = useParams();
    const url = "http://localhost:3000/api";

    useEffect(() => {
        const fetchProduct = async () => {
            try {
                const response = await axios.get(`${url}/product/${id}`, {
                    headers: { "Content-Type": "application/json" },
                    withCredentials: true,
                });
                setProduct(response.data.product);
            } catch (error) {
                console.error("Error fetching product:", error);
            }
        };
        fetchProduct();
    }, [id, url]); // Ensure dependencies are properly listed

    // const {products,} = useContext(AppContext)

    const categories = [
        { name: "Baking Material", count: 7, icon: "🧁" },
        { name: "Bread and Juice", count: 5, icon: "🥖" },
        { name: "Clothing & Beauty", count: 2, icon: "👗" },
        { name: "Deals Of The Day", count: 4, icon: "🔥" },
        { name: "Fresh Fruit", count: 8, icon: "🍌" },
        { name: "Fresh Seafood", count: 5, icon: "🐟" },
        { name: "Milks and Dairies", count: 3, icon: "🥛" },
        { name: "Vegetables", count: 3, icon: "🥕" },
      ];

      const [rating, setRating] = useState(0);
      const [hover, setHover] = useState(0);
    return (
        <>
           <Head/>
           <hr />
           <div className='row'> </div>
            <div className='row  mt-5'>
                <div className='col-2'></div>
               
                <div className="col-3 image-container ">
  <img className=" custom-img " src={product?.imgsrc || "placeholder.jpg"} alt={product?.title || "Loading..."} />
</div>
             <div className='col-1'></div>
                <div className='col-4 mt-4'>
                <h1 className="fs-1 text-green-900 fw-bold">{product?.title || "Loading..."}</h1>
                <h2 className='text-stone-500'> {product?.price || "Loading..."} </h2>
                <h4 className='text-stone-500'> {product?.description || "Loading..."} </h4>
                <div className='row mt-4'>
                    <div className='col-2'>
                        <button className='btn btn-outline-success'> {product?.qty || "Loading..."} </button>
                    </div>
                    <div className='col-4'> 
                    <button className='btn btn-success'> Add to cart </button> </div>
                </div>

               
                </div>
                <div className='col-3'>
                    {/* {products?.map( (i)=>(
                         <div key={i._id} >
                             <h1> {i?.category || "Loading..."} </h1>
                             </div>
                    ))} */}


{/* <div className="bg-white w-72 p-4 rounded-xl shadow-lg">
      <h2 className="text-xl font-bold mb-3 text-center">Category</h2>
      <ul className="space-y-2">
        {products?.map((i) => (
          <li
            key={i._id}
            className="flex items-center bg-gray-100 p-3 rounded-lg hover:bg-blue-100 transition"
          >
            <span className="text-xl mr-3"> icon </span>
            <span className="flex-grow text-gray-700 font-medium">
             {i?.category ||"Loading..."}
            </span>
            
          </li>
        ))}
      </ul>
    </div> */}

{/* //Category static */}
{/* 
<div className="bg-white w-72 p-4 rounded-xl " >
      <h2 className="text-xl font-bold mb-3 text-center">Category</h2>
      <ul className="space-y-2">
        {categories.map((category, index) => (
          <li
            key={index}
            className="flex items-center bg-gray-100 p-3 rounded-lg hover:bg-blue-100 transition"
          >
            <span className="text-xl mr-3">{category.icon}</span>
            <span className="flex-grow text-gray-700 font-medium">
              {category.name}
            </span>
            <span className="bg-green-200 px-3 py-1 rounded-full text-sm font-bold">
              {category.count}
            </span>
          </li>
        ))}
      </ul>
    </div>
 */}


{/* category end */}


                </div>
            </div>

{/* new side part s */}



{/* new side part e */}


<div className="p-4 border rounded-lg mt-3 mx-auto" style={{ maxWidth: "1050px" }}>
      <div className="mb-4">
        <span className="bg-green-100 text-green-600 px-3 py-1 rounded-full text-sm">Reviews (0)</span>
      </div>
      <h2 className="text-xl font-semibold mb-2">Reviews</h2>
      <p className="text-gray-600 mb-2">There are no reviews yet.</p>
      <p className="mb-4 font-medium">Be the first to review <span className="text-green-700"> {product?.title || "Loading.."} </span></p>
      <p className="text-sm text-gray-500 mb-2">Your email address will not be published. Required fields are marked *</p>
      
      {/* Rating */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Your rating *</label>
        <div className="flex space-x-1">
          {[...Array(5)].map((_, index) => {
            const ratingValue = index + 1;
            return (
              <span
                key={index}
                className={`cursor-pointer text-2xl ${
                  ratingValue <= (hover || rating) ? 'text-yellow-500' : 'text-gray-300'
                }`}
                onClick={() => setRating(ratingValue)}
                onMouseEnter={() => setHover(ratingValue)}
                onMouseLeave={() => setHover(0)}
              >
                ★
              </span>
            );
          })}
        </div>
      </div>

      {/* Review textarea */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Your review *</label>
        <textarea
          rows="5"
          className="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring focus:ring-green-300"
          placeholder="Write your review here..."
        ></textarea>
      </div>

      {/* Name input */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Name *</label>
        <input
          type="text"
          className="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring focus:ring-green-300"
        />
      </div>

      {/* Email input */}
      <div className="mb-4">
        <label className="block mb-1 font-medium">Email *</label>
        <input
          type="email"
          className="w-full border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring focus:ring-green-300"
        />
      </div>

      {/* Checkbox */}
      <div className="mb-4 flex items-center">
        <input type="checkbox" id="save-info" className="mr-2" />
        <label htmlFor="save-info" className="text-sm text-gray-600">
          Save my name, email, and website in this browser for the next time I comment.
        </label>
      </div>

      {/* Submit button */}
      <button className="w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded">
        Submit
      </button>
    </div>
{/* review page end */}


            {/* related product start */}

<Relatedproduct category={product?.category} />
{/* related product end */}
        </>
    );
};

export default ProductDetail;
